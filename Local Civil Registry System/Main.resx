<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AABJRU5ErkJggg==
</value>
  </data>
</root>